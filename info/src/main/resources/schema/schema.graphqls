type Query {
    details(filter: DetailsFilter): [Details]
}

type Mutation {
    details(detailsInput: DetailsInput): Details
}

type Details {
    id: String
    name: String
    surname: String
    age: Age
    gender: Gender
    detailsEmails: [DetailsEmail]
    additionInfos: [AdditionInfo]
}

type AdditionInfo {
    nickName: String
    phoneNumber: String
}

type DetailsEmail {
    email: String
    emailStatus: EmailStatus
}

input DetailsInput {
    name: String
    surname: String
    age: Age
    gender: Gender
    detailsEmails: [DetailsEmailInput]
    additionInfos: [AdditionInfoInput]
}

input DetailsEmailInput {
    email: String
    emailStatus: EmailStatus
}

directive @Size(min: Int = 0, max: Int = 50, message : String = "graphql.validation.Size.message")
on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @Pattern(regexp: String! = "[+]3[0-9]{11}", message : String = "graphql.validation.Pattern.message")
on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

input AdditionInfoInput {
    nickName: String @Size(min: 1, max: 25)
    phoneNumber: String @Pattern
}

input DetailsFilter {
    name: String
    surname: String
    age: Age
    gender: Gender
}

scalar Age

enum Gender {
    Male, Female
}

enum EmailStatus {
    Active, Inactive, Closed
}