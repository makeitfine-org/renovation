#
#     Created under not commercial project "Renovation"
#
#     Copyright 2021-2023
#
version: '3.7'

services:
  renovation-postgres:
    image: postgres:16.1
    restart: always
    container_name: "renovation-postgres"
    ports:
      - ${POSTGRES_LOCALHOST_REDIRECT_PORT}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - "./backend/src/main/resources/docker/postgres/db-init-scripts:/docker-entrypoint-initdb.d"
    networks:
      - renovation-network

  renovation-mysql:
    image: mysql:8.0
    restart: always
    container_name: "renovation-mysql"
    ports:
      - ${MYSQL_LOCALHOST_REDIRECT_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  renovation-redis:
    image: redis:7.2.3-alpine
    container_name: renovation-redis
    restart: always
    ports:
      - ${REDIS_LOCALHOST_REDIRECT_PORT}:6379
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb
    #    command: redis-server --include /usr/local/etc/redis/redis.conf # This redis.conf can be used
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    #    volumes:
    #      - ./backend/src/main/resources/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - renovation-network

  renovation-mongo:
    image: mongo:5.0.6
    container_name: renovation-mongo
    restart: always
    ports:
      - ${MONGO_LOCALHOST_REDIRECT_PORT}:27017
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./info/src/main/resources/db/migration/mongo/init/:/docker-entrypoint-initdb.d:ro
    networks:
      - renovation-network

  renovation-keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    restart: always
    container_name: renovation-keycloak
    command: [
      "-Dkeycloak.migration.action=import",
      "-Dkeycloak.migration.provider=singleFile",
      "-Dkeycloak.migration.file=/opt/keycloak/data/import/renovation-realm.json",
      "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING",
      "start-dev"
    ]
    volumes:
      - ./aux/keycloak-config:/opt/keycloak/data/import
    #      - ./aux/ex:/opt/keycloak/data/export
    #    depends_on:
    #      - renovation-postgres
    ports:
      - ${KEYCLOAK_LOCALHOST_REDIRECT_PORT}:8080
    environment:
      #      DB_VENDOR: POSTGRES
      #      DB_ADDR: "renovation-postgres"
      #      DB_DATABASE: ${POSTGRES_DB}
      #      DB_SCHEMA: ${POSTGRES_DB_SCHEMA}
      #      DB_USER: ${POSTGRES_USERNAME}
      #      DB_PASSWORD: ${POSTGRES_PASSWORD}

      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: true
    networks:
      - renovation-network

  renovation-vault:
    image: vault:1.13.3
    restart: always
    container_name: renovation-vault
    ports:
      - ${VAULT_SERVER_REDIRECT_PORT}:8200
    volumes:
      - ./vault/config:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    environment:
      VAULT_ADDR: "http://localhost:8200"
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
    cap_add:
      - IPC_LOCK
    networks:
      - renovation-network

  renovation-vault-prepopulate:
    image: alpine/curl:8.2.1
    container_name: renovation-vault-prepopulate
    depends_on:
      - renovation-vault
    volumes:
      - ./temp/src/main/resources/docker/vault/secrets_provision.sh:/usr/local/bin/secrets_provision.sh
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - |
        while
            ! curl -s renovation-vault:8200 > /dev/null;
         do
            echo 'In Waiting for services up and readiness ...'
        sleep 1
        done
        /usr/local/bin/secrets_provision.sh
    networks:
      - renovation-network

  renovation-backend:
    image: koresmosto/renovation-backend
    build:
      context: ./backend
    restart: always
    container_name: renovation-backend
    depends_on:
      - renovation-postgres
      - renovation-redis
      - renovation-keycloak
    ports:
      - ${BACKEND_SERVER_REDIRECT_PORT}:8080
    environment:
      POSTGRES_DB_URL: "jdbc:postgresql://renovation-postgres:5432/${POSTGRES_DB}?currentSchema=renovation"
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      INFO_SERVICE_URL: ${INFO_SERVICE_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT}
    networks:
      - renovation-network

  renovation-info:
    image: koresmosto/renovation-info
    build:
      context: ./info
    restart: always
    container_name: renovation-info
    depends_on:
      - renovation-mongo
      - renovation-keycloak
    ports:
      - ${INFO_SERVER_REDIRECT_PORT}:9090
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_HOST: ${MONGO_HOST}
      #      MONGO_DB_URI: ${MONGO_DB_URI}

      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT}
    networks:
      - renovation-network

  renovation-frontend-info:
    image: koresmosto/renovation-frontend-info
    build:
      context: ./frontend-info
    restart: always
    container_name: renovation-frontend-info
    depends_on:
      - renovation-info
      - renovation-keycloak
    ports: #Think of volume for directory
      - ${FRONTEND_INFO_SERVER_REDIRECT_PORT}:8080
    environment:
      VUE_APP_INFO_GRAPHQL_URL: ${VUE_APP_INFO_GRAPHQL_URL}
      VUE_APP_BACKEND_API_URL: ${VUE_APP_BACKEND_API_URL}
      VUE_APP_TOKEN_ENDPOINT: ${VUE_APP_TOKEN_ENDPOINT}
    networks:
      - renovation-network

  renovation-gateway:
    image: koresmosto/renovation-gateway
    build:
      context: ./gateway
    restart: always
    container_name: renovation-gateway
    depends_on:
      - renovation-keycloak
    ports:
      - ${GATEWAY_SERVER_REDIRECT_PORT}:${GATEWAY_PORT}
      - ${GATEWAY_SERVER_ACTUATOR_REDIRECT_PORT}:8086
    environment:

      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KEYCLOAK_PORT: ${KEYCLOAK_PORT}

      GATEWAY_HOST: ${GATEWAY_HOST}
      PORT: ${GATEWAY_PORT}
    networks:
      - renovation-network

  renovation-mockapi:
    image: mockserver/mockserver:5.13.1
    restart: always
    container_name: "renovation-mockapi"
    ports:
      - ${MOCKAPI_SERVER_REDIRECT_PORT}:1080
    environment:
      MOCKSERVER_WATCH_INITIALIZATION_JSON: "true"
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializer.json
    volumes:
      - type: bind
        source: ./mockapi/config
        target: /config
    networks:
      - renovation-network

  renovation-temp:
    image: koresmosto/renovation-temp
    build:
      context: ./temp
    depends_on:
      - renovation-vault
      - renovation-vault-prepopulate
    restart: always
    container_name: renovation-temp
    ports:
      - ${TEMP_SERVER_REDIRECT_PORT}:8080
    environment:
      VAULT_HOST: renovation-vault
      VAULT_PORT: 8200
      VAULT_TOKEN: ${VAULT_DEV_ROOT_TOKEN_ID}
    networks:
      - renovation-network

networks:
  renovation-network:
