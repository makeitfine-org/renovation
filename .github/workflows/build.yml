# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java and Node CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_USERNAME: ${{ vars.POSTGRES_USERNAME }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      POSTGRES_LOCALHOST_REDIRECT_PORT: ${{ vars.POSTGRES_LOCALHOST_REDIRECT_PORT }}

      MONGO_LOCALHOST_REDIRECT_PORT: ${{ vars.MONGO_LOCALHOST_REDIRECT_PORT }}
      MONGO_INITDB_DATABASE: ${{ vars.MONGO_INITDB_DATABASE }}
      MONGO_INITDB_ROOT_USERNAME: ${{ vars.MONGO_INITDB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ vars.MONGO_INITDB_ROOT_PASSWORD }}

      INFO_SERVER_REDIRECT_PORT: ${{ vars.INFO_SERVER_REDIRECT_PORT }}
      MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
      MONGO_PASSWORD: ${{ vars.MONGO_PASSWORD }}
      MONGO_DB: ${{ vars.MONGO_DB }}
      MONGO_PORT: ${{ vars.MONGO_PORT }}
      MONGO_HOST: ${{ vars.MONGO_HOST }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          gradle-version: 7.5.1
      - run: gradle detekt
      - run: gradle test
      - run: gradle integrationTest

      #      - name: Login to Docker Hub
      #        uses: docker/login-action@v3
      #        with:
      #          username: ${{ secrets.DOCKERHUB_USERNAME_KORES }}
      #          password: ${{ secrets.DOCKERHUB_TOKEN_KORES }}
      #      - name: Build and push
      #        uses: docker/build-push-action@v5
      #        with:
      #          context: ./backend
      #          push: true
      #          tags: ${{ secrets.DOCKERHUB_USERNAME_KORES }}/renovation-backend:latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: docker compose (env. for e2e test)
        run: docker compose up renovation-postgres renovation-mongo renovation-info  -d --build

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: frontend module install && build (Node.js)
        working-directory: ./frontend
        run: |
          npm install
          npm run-script build
      - name: frontend-info module install && build (Node.js)
        working-directory: ./frontend-info
        run: |
          npm install
          npm run-script build

      - name: ng-part module install (Node.js)
        working-directory: ./ng-part
        run: npm install
      - name: ng-part module lint (Node.js)
        working-directory: ./ng-part
        run: npm run-script lint
      - name: ng-part module e2e test (Node.js)
        working-directory: ./ng-part
        run: npm run-script test.nw.headless

      - name: node-server module install (Node.js)
        working-directory: ./node-server
        run: npm install
      - name: node-server module lint (Node.js)
        working-directory: ./node-server
        run: npm run-script lint
      - name: node-server module test (Node.js)
        working-directory: ./node-server
        run: npm run-script test
